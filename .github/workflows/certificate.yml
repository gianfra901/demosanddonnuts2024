# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  run-script:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.2.2

    - name: Set execute permissions
      run: chmod +x ./hv.ps1

    - name: Hashicorp Vault reusable workflow
      uses: ./.github/workflows/hashicorp-vault.yml@main
      with:
        input1: 'admin'
        input2: 'https://sample-cluster-public-vault-4bf4a18c.31328491.z1.hashicorp.cloud:8200'

    - name: Display outputs
      run: |
        echo "Output 1: ${{ needs.call-reusable.outputs.filevalue }}"
        echo "Output 2: ${{ needs.call-reusable.outputs.password }}"
        echo "Output 3: ${{ needs.call-reusable.outputs.thumbprint }}"        
        
    - name: Decode base64 string to file
      run: |
        echo ${{ steps.runps.outputs.filevalue }} | base64 -d > domain.pfx
    - name: Use the decoded file
      run: cat domain.pfx      
        
    - name: Command az login
      id: runps2
      shell: pwsh
      run: |
        az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_PASSWORD }} --tenant ${{ secrets.AZURE_TENANT_ID }}
        
    - name: Command az webapp config ssl upload
      id: runps3
      shell: pwsh
      run: |
        az webapp config ssl upload --resource-group RSGRDEMO --name demosanddonuts --certificate-file ./domain.pfx --certificate-password ${{ steps.runps.outputs.password }}

    - name: Command az webapp config ssl bind
      id: runps4
      shell: pwsh
      run: |
        az webapp config ssl bind --resource-group RSGRDEMO --name demosanddonuts --certificate-thumbprint ${{ steps.runps.outputs.thumbprint }} --ssl-type SNI
                  
          
